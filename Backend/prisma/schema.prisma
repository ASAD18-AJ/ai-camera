// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int         @id @default(autoincrement())
  name           String
  password       String
  employee_Id    String      @unique
  createdAt      DateTime    @default(now())
  access_level   ACCESSLEVEL @default(VIEW)
  view_detection Boolean     @default(false)
}

model CrowdCount {
  id           Int      @id @default(autoincrement())
  count        Int
  timestamp    DateTime @default(now())
  confidence   Float
  vehicleCount Int?
  cameraId     String

  camera Camera @relation(fields: [cameraId], references: [cameraId])
}

model DetectionLog {
  id              Int           @id @default(autoincrement())
  timestamp       DateTime      @default(now())
  cameraId        String
  metadata        Json?
  trackId         String        @db.VarChar(255)
  camera_ip       String        @db.VarChar(30)
  boxCoords       String        @db.VarChar(255)
  detectionClass  String        @db.VarChar(20)
  classConfidence Float
  topColor        String        @db.VarChar(20)
  bottomColor     String        @db.VarChar(20)
  licenseNumber   String?       @db.VarChar(20)
  incidentType    IncidentType?

  camera Camera @relation(fields: [cameraId], references: [cameraId])
}

model OperationLog {
  id                    Int       @id @default(autoincrement())
  operationType         String    @db.VarChar(255)
  operationRequestData  Json?     @db.Json
  operationResponseData Json?     @db.Json
  initialTimestamp      DateTime
  finalTimestamp        DateTime
  userId                String    @db.VarChar(20)
  closeTimestamp        DateTime?
  operationStatus       Status    @default(ACTIVE)
  operationTimestamp    DateTime? @default(now())

  cameras Camera[] @relation("OperationCameras")
}

model AnprLogs {
  id                    Int      @id @default(autoincrement())
  camera_ip             String   @db.VarChar(30)
  camera_id             String   @db.VarChar(30)
  time_stamp            DateTime @default(now())
  detection_id          Int
  meta_data             Json?
  license_number        String   @db.VarChar(20)
  prediction_confidence Float
  trackId               String   @db.VarChar(255)
  boxCoords             String   @db.VarChar(255)
  detectionClass        String   @db.VarChar(20)
  ownerName             String?  @db.VarChar(255)

  camera Camera @relation(fields: [camera_id], references: [cameraId])
}

model IncidentLogs {
  id              Int          @id @default(autoincrement())
  timestamp       DateTime     @default(now())
  cameraId        String
  metadata        Json?
  trackId         String       @db.VarChar(255)
  camera_ip       String       @db.VarChar(30)
  boxCoords       String       @db.VarChar(255)
  incidentType    IncidentType
  modelResolved   Boolean      @default(false)
  modelResolvedAt DateTime?
  userResolved    Boolean      @default(false)
  userResolvedAt  DateTime?
  resolved        Boolean      @default(false)
  resolvedAt      DateTime?    @default(now())

  camera Camera @relation(fields: [cameraId], references: [cameraId])
}

model Camera {
  cameraId       String   @id @db.VarChar(30)
  cameraIp       String   @db.VarChar(30)
  facingAngle    String   @db.VarChar(5)
  location       String   @db.VarChar(50)
  coordinates    Json
  cameraName     String   @db.VarChar(50)
  connectionType String   @db.VarChar(10)
  cameraType     String   @db.VarChar(10)
  status         Status
  installed      DateTime @db.Timestamptz()
  lastOnline     DateTime @db.Timestamptz()
  routerIp       String?  @db.VarChar(30)
  manufacturer   String?  @db.VarChar(30)
  crowdThreshold Float?   @default(0)
  areaName       String?  @db.VarChar(255)
  rtspLink       String?  @db.VarChar(255)

  // todo: add area

  operations   OperationLog[] @relation("OperationCameras")
  DetectionLog DetectionLog[]
  AnprLogs     AnprLogs[]
  CrowdCount   CrowdCount[]
  IncidentLogs IncidentLogs[]
}

model Class {
  id         Int    @id @default(autoincrement())
  className  String @db.VarChar(255)
  objectType String @db.VarChar(255)
}

enum Status {
  ACTIVE
  INACTIVE
}

enum ACCESSLEVEL {
  ADMIN // access to everything  eg. creation of user
  WORK // access to operations
  VIEW // for viewer developers
  SERVER //for server developers
}

enum IncidentType {
  REDLIGHT_VIOLATION
  OVERSPEEDING
  ILLEGAL_PARKING
  WRONG_WAY_DRIVING
  ACCIDENT
  VEHICLE_RESTRICTION
  CROWD_RESTRICTION
  GARBAGE
  POTHOLE
  CATTLE
  WATERLOGGING
  PEEING
  SPITTING
}
